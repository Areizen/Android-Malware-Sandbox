import datetime
import re
import socket
from urllib.parse import urlparse

from sqlalchemy import Column, Integer, String, Boolean, ForeignKey, DateTime

from lib.model.database.Database import Database

import binascii
import base64

Base = Database.get_declarative_base()


class ProxyURL(Base):
    __tablename__ = 'proxyURL'
    id = Column(Integer, primary_key=True)
    date = Column(DateTime, default=datetime.datetime.utcnow)
    response_code = Column(String)
    req_method = Column(String)
    url = Column(String)
    request = Column(String)
    response = Column(String)
    application_id = Column(Integer, ForeignKey('application.id'))

    def __init__(self, msg_json):
        self.response_code = msg_json['resp_code']
        self.req_method = msg_json['req_method']
        self.url = msg_json['url']
        self.request = msg_json['request']
        self.response = msg_json['response']

    def __repr__(self):
        return f'<ProxyURL(response_code={self.response_code}, req_method="{self.req_method}",url="{self.url}", date="{self.date}")>'