import datetime

from lib.model.database.Database import Database

from sqlalchemy import Column, Integer, String, Date, DateTime, ForeignKey

Base = Database.get_declarative_base()


class DexClassLoader(Base):
    __tablename__ = 'dexclassloader'

    id = Column(Integer, primary_key=True)
    date = Column(DateTime, default=datetime.datetime.utcnow)
    dexPath = Column(String)
    optimizedDirectory = Column(String)
    librarySearchPath = Column(String)
    parent = Column(String)
    entrypoint = Column(String)
    stack_trace = Column(String)
    application_id = Column(Integer, ForeignKey('application.id'))

    def __init__(self, dexPath, optimizedDirectory, librarySearchPath, parent, entrypoint, stack_trace):
        self.dexPath = dexPath
        self.optimizedDirectory = optimizedDirectory
        self.librarySearchPath = librarySearchPath
        self.parent = parent
        self.entrypoint = entrypoint
        self.stack_trace = stack_trace

    def __repr__(self):
        return f'<DexClassLoader(id={self.id},dexPath="{self.dexPath}",optimizedDirectory="{self.optimizedDirectory}",librarySearchPath="{self.librarySearchPath}",parent="{self.parent}",entrypoint="{self.entrypoint}",date="{self.date}")>'
