function hook_proxy(){
    var system = Java.use('java.lang.System')
    var proxy = Java.use('android.net.Proxy')

    system.getProperty.overload('java.lang.String').implementation = function(p_str){
        if (p_str.includes("http.proxyHost") || p_str.includes("https.proxyHost") ){
            var obj = {"plugin": "proxy", "method": "http[s].proxyHost"};
            send(JSON.stringify(obj));
            return null;
        }
        else if (p_str.includes("http.proxyPort") || (p_str.includes("https.proxyPort"))){
            var obj = {"plugin": "proxy", "method": "http[s].proxyPort"};
            send(JSON.stringify(obj));
            return null;
        }
        else{
            return this.getProperty(p_str);
        }
    }
    proxy.getHost.overload('android.content.Context').implementation = function(p_str){
        var obj = {"plugin": "proxy", "method": "android.net.Proxy.getHost"};
        send(JSON.stringify(obj));
        return null;
    }
    proxy.getPort.overload('android.content.Context').implementation = function(p_str){
        var obj = {"plugin": "proxy", "method": "android.net.Proxy.getPort"};
        send(JSON.stringify(obj));
        return null;
    }
}

hook_proxy();