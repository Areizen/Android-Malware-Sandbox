
static_resources:
  listeners:
  - name: tls_redirect
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          stream_idle_timeout: 0s  # Needed for streaming support.
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            virtual_hosts:
            - name: backend
              domains:
              - ["*"]
              routes:
              - match:
                  prefix: "/"
                redirect:
                  path_redirect: "/"
                  https_redirect: true
          http_filters:
          - name: envoy.router
            config: {}
  - name: tls_secure
    address:
      socket_address: { address: 0.0.0.0, port_value: 8443 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
                # This is the emulator endpoint for grpc requests.
              - match: { prefix: "/android.emulation.control.EmulatorController" }
                route: 
                   cluster: emulator_service_grpc
                   max_grpc_timeout: 0s

                # This is the JWT token provider, responsible for handing our secure tokens.
              - match: { prefix: "/token" }
                route: { cluster: jwt_signer }

                # The rest will be available under our webapp.
              - match: { prefix: "/" }
                route: { cluster: nginx }
              cors:
                allow_origin: ["*"]
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          # We setup a JWT authentication endpoint in front of the gRPC engine.
          # This will enforce JWT token validation before we forward the gRPC call
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                emulator-jwt:
                  issuer: android-emulator@jwt-provider.py
                  audiences:
                  - android.emulation.control.EmulatorController
                  local_jwks:
                    # The secrets that are used by the token service to properly
                    # sign the jwt tokens.
                    filename: /etc/jwt_secrets_pub.jwks
              rules:
              - match: { prefix: "/android.emulation.control.EmulatorController" }
                requires: { provider_name: "emulator-jwt" }
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router

      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/cert.crt"
              private_key:
                filename: "/etc/key.key"
  clusters:
  - name: emulator_service_grpc
    connect_timeout: 0.250s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: emulator_service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: emulator
                port_value: 5556
  - name: jwt_signer
    connect_timeout: 0.250s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: jwt_signer
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: jwt_signer
                port_value: 8080
  - name: nginx
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: nginx
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: nginx
                port_value: 80
admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

