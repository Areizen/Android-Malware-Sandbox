from lib.receiver.Receiver import Receiver
from plugins.proxy_url_plugin import plugin as ProxyURL
import logging
import subprocess

import json

import os
dirname = os.path.dirname(os.path.realpath(__file__)) + "/../../"

class Proxy(Receiver):

    def __init__(self, configuration, module, report_path):
        Receiver.__init__(self,"ProxyReceiver")
        self.ip = configuration.get('ip')
        self.proxy_port = configuration.get('port')
        self.module = module
        self.filename = f"{report_path}urls_{self.module.application.id}_{self.module.application.package.replace('.','_')}.txt"

    def start(self):
        logging.debug("Proxy:start()")

        # Emptying the file
        with open(self.filename, "w"):
            pass
        
        self.proxy_pid = subprocess.Popen(['mitmdump', '--rawtcp', '--ssl-insecure', '-p', self.proxy_port, '-s', f'{dirname}lib/proxy/HttpProxy.py', '&'],
                                        stdout=subprocess.DEVNULL)

    def stop(self):
        self.proxy_pid.kill()
        logging.debug("Proxy:stop()")


        with open(self.filename, "r") as f:
            urls = f.read().split('\n')
            for url in urls:
                if url != '':
                    ProxyURL.parse(self.module,json.loads(url),'')

        # Emptying the file
        with open(self.filename, "w"):
            pass



