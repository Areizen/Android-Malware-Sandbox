(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const hooks = require('./lib/hooks.js');

const anti_emulator = require('./lib/anti-emulator.js');

Java.perform(function () {
  anti_emulator.bypass_build_properties();
  anti_emulator.bypass_phonenumber();
  anti_emulator.bypass_deviceid();
  anti_emulator.bypass_imsi();
  anti_emulator.bypass_operator_name();
  anti_emulator.bypass_sim_operator_name();
  anti_emulator.bypass_has_file();
  anti_emulator.bypass_processbuilder();
  anti_emulator.bypass_system_properties();
  hooks.to_string();
  hooks.url_init();
  hooks.dexclass_loader();
  hooks.hook_secrets(); //Plugin code : Example
  //Plugin code : FileInteraction

  function fileHooks() {
    const File = Java.use("java.io.File");
    constructor = [File.$init.overload("java.lang.String"), File.$init.overload("java.lang.String", "java.lang.String")];

    constructor[0].implementation = function (a0) {
      send("file: " + a0);
      var ret = constructor[0].call(this, a0);
      return ret;
    };

    constructor[1] = function (a0, a1) {
      send("file: " + a0 + "/" + a1);
      var ret = constructor[1].call(this, a0, a1);
      return ret;
    };
  }

  fileHooks(); //Plugin code : SharedPreferences

  function notifyNewSharedPreference() {
    Java.use('android.app.SharedPreferencesImpl$EditorImpl').putString.overload('java.lang.String', 'java.lang.String').implementation = function (k, v) {
      send("sharedprefs:" + k + "=" + v);
      return this.putString(k, v);
    };
  }

  notifyNewSharedPreference();
});

},{"./lib/anti-emulator.js":2,"./lib/hooks.js":3}],2:[function(require,module,exports){
function replaceFinaleField(object, fieldName, value) {
  var field = object.class.getDeclaredField(fieldName);
  field.setAccessible(true);
  field.set(null, value);
}

function bypass_build_properties() {
  // Class containing const that we want to modify
  const Build = Java.use("android.os.Build"); // reflection class for changing const

  const Field = Java.use('java.lang.reflect.Field');
  const Class = Java.use('java.lang.Class'); // Replacing Build static fields

  replaceFinaleField(Build, "FINGERPRINT", "abcd/C1505:4.1.1/11.3.A.2.13:user/release-keys");
  replaceFinaleField(Build, "MODEL", "C1505");
  replaceFinaleField(Build, "MANUFACTURER", "Sony");
  replaceFinaleField(Build, "BRAND", "Xperia");
  replaceFinaleField(Build, "BOARD", "7x27");
  replaceFinaleField(Build, "ID", "11.3.A.2.13");
  replaceFinaleField(Build, "SERIAL", "abcdef123");
  replaceFinaleField(Build, "TAGS", "release-keys");
  replaceFinaleField(Build, "USER", "administrator");
}

function bypass_phonenumber() {
  const TelephonyManager = Java.use('android.telephony.TelephonyManager');

  TelephonyManager.getLine1Number.overload().implementation = function () {
    console.log("Phone number bypass");
    return "060102030405";
  };
}

function bypass_deviceid() {
  const TelephonyManager = Java.use('android.telephony.TelephonyManager');

  TelephonyManager.getDeviceId.overload().implementation = function () {
    console.log("Device id");
    return "012343545456445";
  };
}

function bypass_imsi() {
  const TelephonyManager = Java.use('android.telephony.TelephonyManager');

  TelephonyManager.getSubscriberId.overload().implementation = function () {
    console.log("Suscriber ID");
    return "310260000000111";
  };
}

function bypass_operator_name() {
  const TelephonyManager = Java.use('android.telephony.TelephonyManager');

  TelephonyManager.getNetworkOperatorName.overload().implementation = function () {
    console.log("Operator Name");
    return "not";
  };
}

function bypass_sim_operator_name() {
  const TelephonyManager = Java.use('android.telephony.TelephonyManager');

  TelephonyManager.getSimOperatorName.overload().implementation = function () {
    console.log("Operator Name");
    return "not";
  };
}

function bypass_has_file() {
  const File = Java.use("java.io.File");
  const KnownFiles = ["ueventd.android_x86.rc", "x86.prop", "ueventd.ttVM_x86.rc", "init.ttVM_x86.rc", "fstab.ttVM_x86", "fstab.vbox86", "init.vbox86.rc", "ueventd.vbox86.rc", "/dev/socket/qemud", "/dev/qemu_pipe", "/system/lib/libc_malloc_debug_qemu.so", "/sys/qemu_trace", "/system/bin/qemu-props", "/dev/socket/genyd", "/dev/socket/baseband_genyd", "/proc/tty/drivers", "/proc/cpuinfo"];

  File.exists.implementation = function () {
    var x = this.getAbsolutePath();

    for (var i = 0; i < KnownFiles.length; i++) {
      if (KnownFiles[i] == x) {
        return false;
      }
    }

    return this.exists();
  };
}

function bypass_processbuilder() {
  var ProcessBuilder = Java.use('java.lang.ProcessBuilder');

  ProcessBuilder.$init.overload('[Ljava.lang.String;').implementation = function (x) {
    console.log("ProcessBuilder");
    return null;
  };
}

function bypass_system_properties() {
  /*
  * Function used to bypass common checks to
  * Android OS properties
  * Bypass the props checking from this git : https://github.com/strazzere/anti-emulator
  *
  */
  const SystemProperties = Java.use('android.os.SystemProperties');
  const String = Java.use('java.lang.String');
  const Properties = {
    "init.svc.qemud": null,
    "init.svc.qemu-props": null,
    "qemu.hw.mainkeys": null,
    "qemu.sf.fake_camera": null,
    "qemu.sf.lcd_density": null,
    "ro.bootloader": "xxxxx",
    "ro.bootmode": "xxxxxx",
    "ro.hardware": "xxxxxx",
    "ro.kernel.android.qemud": null,
    "ro.kernel.qemu.gles": null,
    "ro.kernel.qemu": "xxxxxx",
    "ro.product.device": "xxxxx",
    "ro.product.model": "xxxxxx",
    "ro.product.name": "xxxxxx",
    "ro.serialno": null
  };

  SystemProperties.get.overload('java.lang.String').implementation = function (x) {
    console.log("Property " + x);

    if (x in Properties) {
      console.log('Returning ' + Properties[x]);
      return Properties[x];
    }

    return this.get(x);
  };
}

exports.bypass_build_properties = bypass_build_properties;
exports.bypass_phonenumber = bypass_phonenumber;
exports.bypass_deviceid = bypass_deviceid;
exports.bypass_imsi = bypass_imsi;
exports.bypass_operator_name = bypass_operator_name;
exports.bypass_sim_operator_name = bypass_sim_operator_name;
exports.bypass_has_file = bypass_has_file;
exports.bypass_processbuilder = bypass_processbuilder;
exports.bypass_system_properties = bypass_build_properties;

},{}],3:[function(require,module,exports){
function url_init() {
  var url = Java.use("java.net.URL");

  url.$init.overload('java.lang.String').implementation = function (var0) {
    if (!var0.startsWith("null")) {
      send("url:" + var0 + "");
    }

    return this.$init(var0);
  };
}

function to_string() {
  const String = Java.use('java.lang.String');
  const StringBuilder = Java.use('java.lang.StringBuilder');

  String.toString.implementation = function () {
    const x = this.toString();

    if (x.length > 5) {
      send("to_string:" + x + "");
    }

    return x;
  };

  StringBuilder.toString.implementation = function () {
    const x = this.toString();

    if (x.length > 5) {
      send("to_string:" + x);
    }

    return x;
  };
}

function dexclass_loader() {
  var DexClassLoader = Java.use("dalvik.system.DexClassLoader");

  DexClassLoader.$init.implementation = function (dexPath, optimizedDirectory, librarySearchPath, parent) {
    send("dexclassloader:" + dexPath + "|" + optimizedDirectory + "|" + librarySearchPath + "|" + parent + "");
    this.$init(dexPath, optimizedDirectory, librarySearchPath, parent);
  };
}

function hook_secrets() {
  var secret_key_spec = Java.use("javax.crypto.spec.SecretKeySpec");

  secret_key_spec.$init.overload("[B", "java.lang.String").implementation = function (x, y) {
    send('Key:' + new Uint8Array(x));
    return this.$init(x, y);
  };

  var iv_parameter_spec = Java.use("javax.crypto.spec.IvParameterSpec");

  iv_parameter_spec.$init.overload("[B").implementation = function (x) {
    send('IV:' + new Uint8Array(x));
    return this.$init(x);
  };
}

exports.hook_secrets = hook_secrets;
exports.to_string = to_string;
exports.dexclass_loader = dexclass_loader;
exports.url_init = url_init;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
